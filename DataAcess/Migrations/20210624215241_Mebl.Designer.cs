// <auto-generated />
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20210624215241_Mebl")]
    partial class Mebl
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Models.Mebli", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("ProdavecID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("ProdavecID");

                    b.ToTable("Meblis");
                });

            modelBuilder.Entity("DataAccess.Models.MebliOpis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MebliID")
                        .HasColumnType("int");

                    b.Property<string>("Virobnik")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MebliID")
                        .IsUnique();

                    b.ToTable("Opsis");
                });

            modelBuilder.Entity("DataAccess.Models.Pocupci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pocupcis");
                });

            modelBuilder.Entity("DataAccess.Models.Prodavci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Prodavcis");
                });

            modelBuilder.Entity("DataAccess.Models.Robitniki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Staj")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Robitnikis");
                });

            modelBuilder.Entity("DataAccess.Models.Zamovlennya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MebliID")
                        .HasColumnType("int");

                    b.Property<int>("PocupciID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MebliID");

                    b.HasIndex("PocupciID");

                    b.ToTable("Zamovlennyas");
                });

            modelBuilder.Entity("RobitnikiZamovlennya", b =>
                {
                    b.Property<int>("RobitnikisId")
                        .HasColumnType("int");

                    b.Property<int>("ZamovlennyasId")
                        .HasColumnType("int");

                    b.HasKey("RobitnikisId", "ZamovlennyasId");

                    b.HasIndex("ZamovlennyasId");

                    b.ToTable("ZamovlenyaRobitniki");
                });

            modelBuilder.Entity("DataAccess.Models.Mebli", b =>
                {
                    b.HasOne("DataAccess.Models.Prodavci", "Prodavci")
                        .WithMany("Meblis")
                        .HasForeignKey("ProdavecID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prodavci");
                });

            modelBuilder.Entity("DataAccess.Models.MebliOpis", b =>
                {
                    b.HasOne("DataAccess.Models.Mebli", "Mebli")
                        .WithOne("Opis")
                        .HasForeignKey("DataAccess.Models.MebliOpis", "MebliID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mebli");
                });

            modelBuilder.Entity("DataAccess.Models.Zamovlennya", b =>
                {
                    b.HasOne("DataAccess.Models.Mebli", "Mebli")
                        .WithMany("Zamovlennyas")
                        .HasForeignKey("MebliID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Pocupci", "Pocupci")
                        .WithMany("Zamovlennyas")
                        .HasForeignKey("PocupciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mebli");

                    b.Navigation("Pocupci");
                });

            modelBuilder.Entity("RobitnikiZamovlennya", b =>
                {
                    b.HasOne("DataAccess.Models.Robitniki", null)
                        .WithMany()
                        .HasForeignKey("RobitnikisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Models.Zamovlennya", null)
                        .WithMany()
                        .HasForeignKey("ZamovlennyasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Models.Mebli", b =>
                {
                    b.Navigation("Opis");

                    b.Navigation("Zamovlennyas");
                });

            modelBuilder.Entity("DataAccess.Models.Pocupci", b =>
                {
                    b.Navigation("Zamovlennyas");
                });

            modelBuilder.Entity("DataAccess.Models.Prodavci", b =>
                {
                    b.Navigation("Meblis");
                });
#pragma warning restore 612, 618
        }
    }
}
